#
#
services:

  # Orion is the context broker
  orion:
    labels:
      org.fiware: ${COMPOSE_LABEL_FIWARE}
    platform: linux/amd64
    image: quay.io/fiware/orion-ld:${ORION_LD_VERSION}
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    ports:
      - ${EXPOSED_PORT:-1026}:${ORION_LD_PORT:-1026}
    entrypoint:
      - /bin/bash
      - -c
      - |
        orionld -fg -multiservice -ngsiv1Autocast -dbhost mongo-db -logLevel DEBUG -forwarding -mongocOnly
    healthcheck:
      test: curl --fail -s http://orion:${ORION_LD_PORT}/version || exit 1
      interval: 5s

  # Databases
  mongo-db:
    labels:
      org.fiware: ${COMPOSE_LABEL_FIWARE}
    image: mongo:${MONGO_DB_VERSION}
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "${MONGO_DB_PORT}"
      #ports:
      #- "${MONGO_DB_PORT}:${MONGO_DB_PORT}" # localhost:27017
    networks:
      - default
    volumes:
      - mongo-db:/data/db
      - mongo-config:/data/configdb
    healthcheck:
      test: [ "CMD", "mongosh", "localhost:27017/test", "--quiet" ]
      interval: 5s

  # Quantum Leap is persisting Short Term History to Crate-DB
  quantumleap:
    labels:
      org.fiware: ${COMPOSE_LABEL_FIWARE}
    image: orchestracities/quantumleap:${QUANTUMLEAP_VERSION}
    hostname: quantumleap
    container_name: fiware-quantumleap
    depends_on:
      - crate-db
    networks:
      - default
    ports:
      - "${QUANTUMLEAP_PORT:-8668}:${QUANTUMLEAP_PORT:-8668}"
    environment:
      - CRATE_HOST=crate-db
      - LOGLEVEL=DEBUG
    healthcheck:
      test: curl --fail -s http://quantumleap:${QUANTUMLEAP_PORT}/version || exit 1

  crate-db:
    labels:
      org.fiware: ${COMPOSE_LABEL_FIWARE}
    image: crate:${CRATE_VERSION}
    hostname: crate-db
    container_name: db-crate
    #ports:
    # Admin UI
    #- "${CRATE_HTTP_PORT}:${CRATE_HTTP_PORT}"
    # Transport protocol
    #- "${CRATE_TRANSPORT_PORT}:${CRATE_TRANSPORT_PORT}"
    command: crate -Cauth.host_based.enabled=false  -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*" -Cdiscovery.type=single-node
    environment:
      - CRATE_HEAP_SIZE=1g # see https://crate.io/docs/crate/howtos/en/latest/deployment/containers/docker.html#troubleshooting
    volumes:
      - crate-db:/data

  titiler:
    platform: linux/amd64
    labels:
      org.fiware: ${COMPOSE_LABEL_FIWARE}
    image: ghcr.io/developmentseed/titiler:${TITILER_VERSION}
    hostname: titiler
    container_name: titiler
    ports:
      - "${TITILER_PORT}:${TITILER_PORT}"
    entrypoint:
      - /bin/bash
      - -c
      - |
        python -m pip install boto3==${TITILER_BOTO3_VERSION} --upgrade
        uvicorn titiler.application.main:app --host 0.0.0.0 --port ${TITILER_PORT} --workers 1
    environment:
      - CPL_TMPDIR=/tmp
      - GDAL_CACHEMAX=75%
      - GDAL_INGESTED_BYTES_AT_OPEN=32768
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_HTTP_MULTIPLEX=YES
      - GDAL_HTTP_VERSION=2
      - PYTHONWARNINGS=ignore
      - VSI_CACHE=TRUE
      - VSI_CACHE_SIZE=536870912
      - CPL_VSIL_CURL_ALLOWED_EXTENSIONS=.tif

  nginx:
    labels:
      org.fiware: ${COMPOSE_LABEL_FIWARE}
    image: nginx:${NGINX_VERSION}
    hostname: nginx
    container_name: nginx
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - orion
      - quantumleap
      - titiler
      - grafana

  grafana:
    labels:
      org.fiware: ${COMPOSE_LABEL_FIWARE}
    image: grafana/grafana-enterprise:${GRAFANA_VERSION}
    hostname: grafana
    container_name: grafana
    networks:
      - default
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SECURITY_ADMIN_PASSWORD=ak-agri
      - GF_PLUGINS_PREINSTALL=yesoreyeram-infinity-datasource@${GRAFANA_PLUGIN_INFINITY_VERSION},marcusolsson-static-datasource@${GRAFANA_PLUGIN_BUSINESS_INPUT},dalvany-image-panel@${GRAFANA_PLUGIN_DYNAMIC_IMAGE_PANEL}
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/FloodMonitoring.json
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_LOG_LEVEL=debug
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./grafana/dashboard-gis.yml:/etc/grafana/provisioning/dashboards/dashboard-gis.yml
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    entrypoint:
      - /bin/bash
      - -c
      - |
        /run.sh

networks:
  default:
    labels:
      org.fiware: ${COMPOSE_LABEL_FIWARE}
    ipam:
      config:
        - subnet: 172.18.1.0/24
    name: 'fiware_default'

volumes:
  crate-db: ~
  mongo-db: ~
  mongo-config: ~
  grafana: ~
